# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Building documentation
        run: |
          sphinx-apidoc -o . .. ../*tests*
          sphinx-build -b html docs/ public/
    - uses: actions/upload-artifact@v1
      with:
        name: documentation
        path: public
    # download docs artifacts and publish them
    - uses: actions/download-artifact@v1
      with:
        name: documentation
        path: public
    - name: Deploy docs to github pages
      if: github.ref == 'refs/heads/master'
      uses: peaceiris/actions-gh-pages@v2.3.1
      env:
        PERSONAL_TOKEN: ${{ secrets.PAT }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: public

    - name: Create coverage report
      id: create_coverage_report
      run: |
        pytest -m "not slow" --cov-report=html --cov=./ tests/ | tee ./pytest_output.txt

    - name: Check for failed tests
      id: check_tests
      run: |
        if grep -q "=== FAILURES ===" test_output.txt && grep -q "FAILED" test_output.txt; then
          echo "TEST_STATUS=Failed" >> $GITHUB_ENV
        else
          echo "TEST_STATUS=Passed" >> $GITHUB_ENV
        fi

    - name: Create Test Status Badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: ${{ secrets.GIST_ID }}
        filename: lehmer-test-status.json
        label: 'Test Status'
        message: ${{ env.TEST_STATUS }}
        color: ${{ env.TEST_STATUS == 'passed' && '00FF00' || 'FF0000' }}

    - name: Get the percentage
      id: parse_coverage
      run: |
        echo "COVERAGE=$(grep -oP '(?<=<span class="pc_cov">)\d+%' ./htmlcov/index.html | head -n 1 | tr -d '%')" >> $GITHUB_ENV

    - name: Create Coverage Badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: ${{ secrets.GIST_ID }}
        filename: lehmer-coverage.json # Use test.svg if you want to use the SVG mode.
        label: Coverage
        message: ${{ env.COVERAGE }}%
        valColorRange: ${{ env.COVERAGE }}
        maxColorRange: 100
        minColorRange: 0
